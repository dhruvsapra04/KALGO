import React, { useEffect, useState } from 'react';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import axios from 'axios';

function getStatus(price, sma, upper, lower) {
  if (price < lower) return 'Buy';
  if (price > upper) return 'Sell';
  return 'Hold';
}

function Home() {
  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-blue-100 to-white text-center">
      <h1 className="text-5xl font-bold mb-6 text-blue-900">Welcome to Kalgo</h1>
      <p className="mb-6 text-lg text-gray-700">Your stock analysis assistant using real-time market data.</p>
      <Link to="/stocks">
        <button className="px-6 py-3 bg-blue-600 text-white font-semibold rounded-xl shadow hover:bg-blue-700">
          Try Stock Algo
        </button>
      </Link>
    </div>
  );
}

function StockAlgo() {
  const [stocks, setStocks] = useState([]);
  const [search, setSearch] = useState("");
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    axios.get("http://localhost:5000/api/stocks") // Replace with our backend endpoint?
      .then(res => {
        setStocks(res.data);
        setLoading(false);
      })
      .catch(err => console.error(err));
  }, []);

  const filtered = stocks.filter((s) =>
    s.symbol.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <h2 className="text-3xl font-bold mb-4 text-center">ðŸ“ˆ Live Stock Analysis</h2>
      <input
        type="text"
        className="w-full max-w-md mx-auto mb-6 p-2 border rounded-md"
        placeholder="Search stock..."
        value={search}
        onChange={(e) => setSearch(e.target.value)}
      />

      {loading ? (
        <p className="text-center">Loading stock data...</p>
      ) : (
        <div className="overflow-x-auto">
          <table className="min-w-full bg-white rounded-xl shadow">
            <thead className="bg-blue-200 text-left">
              <tr>
                <th className="p-3">Symbol</th>
                <th className="p-3">Price</th>
                <th className="p-3">SMA</th>
                <th className="p-3">Upper Band</th>
                <th className="p-3">Lower Band</th>
                <th className="p-3">Signal</th>
              </tr>
            </thead>
            <tbody>
              {filtered.map((stock) => (
                <tr key={stock.symbol} className="border-t">
                  <td className="p-3 font-semibold">{stock.symbol}</td>
                  <td className="p-3">${stock.price.toFixed(2)}</td>
                  <td className="p-3">${stock.sma.toFixed(2)}</td>
                  <td className="p-3">${stock.upper.toFixed(2)}</td>
                  <td className="p-3">${stock.lower.toFixed(2)}</td>
                  <td className="p-3 font-medium text-blue-600">
                    {getStatus(stock.price, stock.sma, stock.upper, stock.lower)}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
}

export default function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/stocks" element={<StockAlgo />} />
      </Routes>
    </Router>
  );
}
