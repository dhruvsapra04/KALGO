// Kalgo Frontend - Enhanced Web App (React + Tailwind)
// src/App.jsx

import React, { useEffect, useState } from 'react';
import {
  BrowserRouter as Router,
  Routes,
  Route,
  Link,
  useNavigate,
} from 'react-router-dom';
import axios from 'axios';

function getStatus(price, sma, upper, lower) {
  if (price < lower) return 'Buy';
  if (price > upper) return 'Sell';
  return 'Hold';
}

// Home Page
function Home() {
  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-blue-100 to-white text-center">
      <h1 className="text-5xl font-bold mb-6 text-blue-900">Welcome to Kalgo</h1>
      <p className="mb-6 text-lg text-gray-700">Your stock analysis assistant using real-time market data.</p>
      <Link to="/login">
        <button className="px-6 py-3 bg-blue-600 text-white font-semibold rounded-xl shadow hover:bg-blue-700">
          Login to Continue
        </button>
      </Link>
    </div>
  );
}

// Login Page
function Login() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    if (localStorage.getItem('token')) {
      navigate('/stocks');
    }
  }, []);

  const handleLogin = async () => {
    try {
      const res = await axios.post('http://localhost:5000/api/login', {
        email,
        password,
      });
      localStorage.setItem('token', res.data.token);
      navigate('/stocks');
    } catch (err) {
      alert('Login failed. Please check your credentials.');
    }
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100">
      <div className="bg-white p-6 rounded-xl shadow-md w-full max-w-md">
        <h2 className="text-2xl font-bold mb-4">Login</h2>
        <input
          className="w-full p-2 mb-4 border rounded"
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
        />
        <input
          className="w-full p-2 mb-4 border rounded"
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
        />
        <button
          onClick={handleLogin}
          className="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700"
        >
          Login
        </button>
        <p className="mt-4 text-sm">
          Donâ€™t have an account? <Link to="/register" className="text-blue-600">Register</Link>
        </p>
      </div>
    </div>
  );
}

// Register Page
function Register() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    if (localStorage.getItem('token')) {
      navigate('/stocks');
    }
  }, []);

  const handleRegister = async () => {
    try {
      await axios.post('http://localhost:5000/api/register', {
        email,
        password,
      });
      alert('Registration successful! Please log in.');
      navigate('/login');
    } catch (err) {
      alert('Registration failed. Try a different email.');
    }
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100">
      <div className="bg-white p-6 rounded-xl shadow-md w-full max-w-md">
        <h2 className="text-2xl font-bold mb-4">Register</h2>
        <input
          className="w-full p-2 mb-4 border rounded"
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
        />
        <input
          className="w-full p-2 mb-4 border rounded"
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
        />
        <button
          onClick={handleRegister}
          className="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700"
        >
          Register
        </button>
      </div>
    </div>
  );
}

// Stocks Page (Protected)
function StockAlgo() {
  const [stocks, setStocks] = useState([]);
  const [search, setSearch] = useState('');
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (!token) {
      navigate('/login');
      return;
    }

    axios
      .get('http://localhost:5000/api/stocks', {
        headers: { Authorization: `Bearer ${token}` },
      })
      .then((res) => {
        setStocks(res.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error(err);
        localStorage.removeItem('token');
        navigate('/login');
      });
  }, []);

  const filtered = stocks.filter((s) =>
    s.symbol.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-3xl font-bold">ðŸ“ˆ Live Stock Analysis</h2>
        <button
          onClick={() => {
            localStorage.removeItem('token');
            navigate('/login');
          }}
          className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600"
        >
          Logout
        </button>
      </div>
      <input
        type="text"
        className="w-full max-w-md mx-auto mb-6 p-2 border rounded-md"
        placeholder="Search stock..."
        value={search}
        onChange={(e) => setSearch(e.target.value)}
      />

      {loading ? (
        <p className="text-center">Loading stock data...</p>
      ) : (
        <div className="overflow-x-auto">
          <table className="min-w-full bg-white rounded-xl shadow">
            <thead className="bg-blue-200 text-left">
              <tr>
                <th className="p-3">Symbol</th>
                <th className="p-3">Price</th>
                <th className="p-3">SMA</th>
                <th className="p-3">Upper Band</th>
                <th className="p-3">Lower Band</th>
                <th className="p-3">Signal</th>
              </tr>
            </thead>
            <tbody>
              {filtered.map((stock) => {
                const signal = getStatus(stock.price, stock.sma, stock.upper, stock.lower);
                const color =
                  signal === 'Buy'
                    ? 'bg-green-500'
                    : signal === 'Sell'
                    ? 'bg-red-500'
                    : 'bg-yellow-400';
                return (
                  <tr key={stock.symbol} className="border-t">
                    <td className="p-3 font-semibold">{stock.symbol}</td>
                    <td className="p-3">${stock.price.toFixed(2)}</td>
                    <td className="p-3">${stock.sma.toFixed(2)}</td>
                    <td className="p-3">${stock.upper.toFixed(2)}</td>
                    <td className="p-3">${stock.lower.toFixed(2)}</td>
                    <td className="p-3">
                      <span className={`px-3 py-1 text-white rounded-full ${color}`}>
                        {signal}
                      </span>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
}

// Main App
export default function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/login" element={<Login />} />
        <Route path="/register" element={<Register />} />
        <Route path="/stocks" element={<StockAlgo />} />
      </Routes>
    </Router>
  );
}
